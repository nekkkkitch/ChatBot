import telebot
from telebot import types
from data import db_session
from data.users import User
from sqlalchemy import func, or_
from data.markups import markups

bot = telebot.TeleBot("6122208462:AAGVF5U1DQDc3bXPETrF5fawQBLsVKvum7M", parse_mode=None)
db_session.global_init("data/db.db")
markup_standart = types.ReplyKeyboardMarkup(resize_keyboard=True)
btn1 = types.KeyboardButton("/start")
markup_standart.add(btn1)
room = 1
db_sess = db_session.create_session()
for baseUser in db_sess.query(User):
    bot.send_message(baseUser.tid, "–ü—Ä–∏–≤–µ—Ç, –±–æ—Ç –±—ã–ª –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω, –Ω—É–∂–Ω–æ –∑–∞–Ω–æ–≤–æ –ø—Ä–æ–π—Ç–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é(/start),"
                                   " –∏–∑–≤–∏–Ω–∏ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–æ")
    db_sess.query(User).filter(User.tid == baseUser.tid).first().doing = "nothing"
    db_sess.query(User).filter(User.tid == baseUser.tid).first().room = 0
db_sess.commit()


@bot.message_handler(commands=["start"])
def start(message):
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø - –∞–Ω–æ–Ω–∏–º–Ω—ã–π –±–æ—Ç, —Å –ø–æ–º–æ—â—å—é –º–µ–Ω—è —Ç—ã –º–æ–∂–µ—à—å –æ–±—â–∞—Ç—å—Å—è —Å–æ —Å–ª—É—á–∞–π–Ω—ã–º "
                                      "—á–µ–ª–æ–≤–µ–∫–æ–º –∏–Ω–∫–æ–≥–Ω–∏—Ç–æ!"
                                      " –î–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω—É–∂–Ω–æ –≤—Å–µ–≥–æ –ª–∏—à—å —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–π –ø–æ–ª :)",
                     reply_markup=markups["sex"])
    bot.register_next_step_handler(message, registration)


def registration(message):
    user = User()
    user.tid = message.from_user.id
    if message.text == "‚ôÇ–ú—É–∂—Å–∫–æ–π‚ôÇ":
        user.sex = 1
    elif message.text == "‚ôÄ–ñ–µ–Ω—Å–∫–∏–π‚ôÄ":
        user.sex = 0
    else:
        bot.send_message(message.from_user.id, "–ù—É–∂–Ω–æ –≤—ã–±—Ä–∞—Ç—å –ø–æ–ª")
        bot.register_next_step_handler(message, registration)
        return
    user.doing = 'nothing'
    user.room = 0
    user.searching_for = -1
    db_sess = db_session.create_session()
    if not db_sess.query(User).filter(User.tid == message.from_user.id).first():
        db_sess.add(user)
        db_sess.commit()
    elif db_sess.query(User).filter(User.tid == message.from_user.id).first().sex == user.sex:
        bot.send_message(message.from_user.id, '–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!')
    else:
        db_sess.query(User).filter(User.tid == message.from_user.id).first().sex = user.sex
        bot.send_message(message.from_user.id, '–†–∞–∑—Ä–∞–± –≤–µ—Ä–∏—Ç –≤ —Å–º–µ–Ω—É –ø–æ–ª–∞')
        db_sess.commit()
    bot.send_message(message.from_user.id, '–ò—Ç–∞–∫, –∫–æ–≥–æ –±—ã –≤—ã —Ö–æ—Ç–µ–ª–∏ –Ω–∞–π—Ç–∏ –¥–ª—è –æ–±—â–µ–Ω–∏—è?', reply_markup=markups["find"])
    bot.register_next_step_handler(message, startsearching)


def startsearching(message):
    global room
    db_sess = db_session.create_session()
    if message.text in ['–î–µ–≤—É—à–∫—É', '–ü–∞—Ä–Ω—è', '–ù–µ –≤–∞–∂–Ω–æ']:
        if db_sess.query(User.doing).filter(User.tid == message.from_user.id).scalar() == 'nothing':
            sex_id = ['–î–µ–≤—É—à–∫—É', '–ü–∞—Ä–Ω—è', '–ù–µ –≤–∞–∂–Ω–æ'].index(message.text)
            user = db_sess.query(User).filter(User.tid == message.from_user.id).first()
            user.searching_for = sex_id
            user.doing = 'searching'
            bot.send_message(message.from_user.id, '–ò—â—Éüîé', reply_markup=markups["stopsearching"])
            bot.register_next_step_handler(message, conversation)
            if sex_id != 2:
                partner = db_sess.query(User).filter(User.doing == 'searching', or_(User.searching_for == 2,
                                                                                    User.searching_for == user.sex),
                                                     User.tid != message.from_user.id, User.sex == sex_id) \
                    .order_by(func.random()).first()
            else:
                partner = db_sess.query(User).filter(User.doing == 'searching', or_(User.searching_for == 2,
                                                                                    User.searching_for == user.sex),
                                                     User.tid != message.from_user.id) \
                    .order_by(func.random()).first()
            if partner:
                user.doing = 'chatting'
                partner.doing = 'chatting'
                user.room = room
                partner.room = room
                db_sess.commit()
                bot.send_message(message.from_user.id, '–ù–∞—à–µ–ª —Ç–µ–±–µ –¥—Ä—É–≥–∞, –º–æ–∂–µ—à—å —Å –Ω–∏–º –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è!',
                                 reply_markup=markups["stoptalking"])
                bot.send_message(partner.tid, '–ù–∞—à–µ–ª —Ç–µ–±–µ –¥—Ä—É–≥–∞, –º–æ–∂–µ—à—å —Å –Ω–∏–º –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è!',
                                 reply_markup=markups["stoptalking"])
                room += 1
    else:
        bot.send_message(message.from_user.id, '–î–ª—è –ø–æ–∏—Å–∫–∞ –Ω—É–∂–Ω–æ —É–∫–∞–∑–∞—Ç—å –∂–µ–ª–∞–µ–º—ã–π –ø–æ–ª', reply_markup=markups["find"])
        bot.register_next_step_handler(message, startsearching)
    db_sess.commit()


def conversation(message):
    db_sess = db_session.create_session()
    user = db_sess.query(User).filter(User.tid == message.from_user.id).first()
    if user.doing == "chatting":
        global room
        partner = db_sess.query(User).filter(User.tid != message.from_user.id, User.room == user.room).first()
        if message != '–ó–∞–∫–æ–Ω—á–∏—Ç—å —Ä–∞–∑–≥–æ–≤–æ—Ä':
            bot.send_message(partner.tid, message.text)
            print("Message was sent")
            bot.register_next_step_handler(message, conversation)
        else:
            user.room = 0
            user.doing = "nothing"
            partner.room = 0
            partner.doing = "nothing"
            bot.register_next_step_handler(message, conversation)
    elif user.doing == "nothing":
        bot.send_message(user.tid, "–ö–∞–∂–µ—Ç—Å—è, —Ä–∞–∑–≥–æ–≤–æ—Ä –±—ã–ª –∑–∞–≤–µ—Ä—à—ë–Ω, –∏—â–µ–º –¥–∞–ª—å—à–µ...?", reply_markup=markups["find"])
        bot.register_next_step_handler(message, startsearching)
    elif user.doing == "searching" and message.text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫":
        user.doing = "nothing"
        bot.send_message(user.tid, "–ü–æ–∏—Å–∫ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω, –∫–æ–≥–æ –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å?", reply_markup=markups["find"])
        bot.register_next_step_handler(message, startsearching)
    elif user.doing == "searching" and message.text != "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–æ–∏—Å–∫":
        bot.register_next_step_handler(message, conversation)
    db_sess.commit()


bot.infinity_polling()
